server.port=${SERVER_PORT:8080}
server.address=${SERVER_ADDRESS:0.0.0.0}
server.forward-headers-strategy=framework

spring.docker.compose.enabled=false
spring.jackson.time-zone=Asia/Seoul

spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/byeoldori}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:root}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:root}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.open-in-view=false

spring.data.mongodb.host=${SPRING_DATA_MONGODB_HOST:localhost}
spring.data.mongodb.port=${SPRING_DATA_MONGODB_PORT:27017}
spring.data.mongodb.database=${SPRING_DATA_MONGODB_DATABASE:byeoldori}
spring.data.mongodb.username=${SPRING_DATA_MONGODB_USERNAME:root}
spring.data.mongodb.password=${SPRING_DATA_MONGODB_PASSWORD:root}
spring.data.mongodb.authentication-database=${SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE:admin}

springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.disable-swagger-default-url=true

weather.api.key=${WEATHER_API_KEY}
weather.api.url=${WEATHER_API_URL}

# gisangcheng fucking slow so set 5 minutes timeout
spring.mvc.async.request-timeout=300000

forecast.retry.delay=60
forecast.retry.attempts=5

# JWT setting (access 1hour, refresh 14day)
jwt.secret=${JWT_SECRET}
jwt.access.expiration=3600000
jwt.refresh.expiration=1209600000

# Gmail SMTP
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

app.host-url=${APP_HOST_URL:http://localhost:8080}

# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI:http://localhost:8080/login/oauth2/code/google}
spring.security.oauth2.client.registration.google.scope=profile,email

# Image uplode
# File upload capacity
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=12MB
storage.type=${STORAGE_TYPE:local}
# Upload save path
storage.local.base-dir=${STORAGE_LOCAL_BASE_DIR:uploads}
# URL prefix (server host)
storage.public-base-url=${PUBLIC_BASE_URL:http://localhost:8080/files}
storage.allowed-content-types=image/jpeg,image/png,image/webp,image/gif
storage.max-megapixels=50